{
  "hash": "ecb5bbb0bfba884e3db337fd36f719f3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ggtree for phylogenetic trees\"\nauthor: \"Jie Hua\"\ndate: \"2025-06-24\"\ndate-modified: \"2025-06-24\"\ncategories: [Plot]\nimg: \"tree.png\"\n---\n\n\n\n## Basic Information\n\nPhylogenetic trees are used to show the evolutionary relationships between different species or genes. The `ggtree` package in R is a powerful tool for visualizing these trees, allowing for customization and integration with other data types.\n\nOfficial tutorial: <https://bioconductor.org/packages/devel/bioc/vignettes/ggtreeExtra/inst/doc/ggtreeExtra.html>\n\n<https://yulab-smu.top/treedata-book/>\n\n## Installation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install(\"ggtree\")\npak::pkg_install(\"ggtreeExtra\")\npak::pkg_install(\"ggstar\")\npak::pkg_install(\"treeio\")\npak::pkg_install(\"ggnewscale\")\n```\n:::\n\n\n\n## Load demo files\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(ggplot2)\nlibrary(ggtree)\nlibrary(ggtreeExtra)\nlibrary(ggstar)\nlibrary(treeio)\nlibrary(ggnewscale)\n# The path of tree file.\ntrfile <- system.file(\"extdata\", \"tree.nwk\", package=\"ggtreeExtra\")\n# The path of file to plot tip point.\ntippoint1 <- system.file(\"extdata\", \"tree_tippoint_bar.csv\", package=\"ggtreeExtra\")\n# The path of first layer outside of tree.\nring1 <- system.file(\"extdata\", \"first_ring_discrete.csv\", package=\"ggtreeExtra\")\n# The path of second layer outside of tree.\nring2 <- system.file(\"extdata\", \"second_ring_continuous.csv\", package=\"ggtreeExtra\")\n# The tree file was imported using read.tree. If you have other tree format files, you can use corresponding functions from treeio package to read it.\ntree <- read.tree(trfile)\n\n# This dataset will to be plotted point and bar.\ndat1 <- read.csv(tippoint1)\nknitr::kable(head(dat1), caption = \"Demo tree data 1\", format = \"pipe\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Demo tree data 1\n\n|ID               |Location |    Length|Group | Abundance|\n|:----------------|:--------|---------:|:-----|---------:|\n|DE0655_HCMC_2001 |HK       | 0.1786629|Yes   | 12.331055|\n|MS0111_HCMC_1996 |HK       | 0.2105236|Yes   |  9.652052|\n|MS0063_HCMC_1995 |HK       | 1.4337983|Yes   | 11.584822|\n|DE0490_HCMC_2000 |HK       | 0.3823731|Yes   |  7.893231|\n|DE0885_HCMC_2001 |HK       | 0.8478901|Yes   | 12.117232|\n|DE0891_HCMC_2001 |HK       | 1.5038646|Yes   | 10.819734|\n\n\n:::\n\n```{.r .cell-code}\n# This dataset will to be plotted heatmap\ndat2 <- read.csv(ring1)\nknitr::kable(head(dat2), caption = \"Demo tree data 2\", format = \"pipe\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Demo tree data 2\n\n|ID               | Pos|Type  |\n|:----------------|---:|:-----|\n|DE0846_HCMC_2001 |   8|type2 |\n|MS0034_HCMC_1995 |   8|type2 |\n|EG1017_HCMC_2009 |   6|type2 |\n|KH18_HCMC_2009   |   5|type2 |\n|10365_HCMC_2010  |   7|type2 |\n|EG1021_HCMC_2009 |   1|type1 |\n\n\n:::\n\n```{.r .cell-code}\n# This dataset will to be plotted heatmap\ndat3 <- read.csv(ring2)\nknitr::kable(head(dat3), caption = \"Demo tree data 3\", format = \"pipe\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Demo tree data 3\n\n|ID               |Type2 |     Alpha|\n|:----------------|:-----|---------:|\n|MS0004_HCMC_1995 |p3    | 0.2256195|\n|DE1150_HCMC_2002 |p2    | 0.2222086|\n|MS0048_HCMC_1995 |p2    | 0.1881510|\n|HUE57_HCMC_2010  |p3    | 0.1939088|\n|DE1486_HCMC_2002 |p2    | 0.2018493|\n|DE1165_HCMC_2002 |p3    | 0.1812997|\n\n\n:::\n:::\n\n\n\n## Fan layout tree\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# The format of the datasets is the long shape for ggplot2. If you have short shape dataset,\n# you can use `melt` of `reshape2` or `pivot_longer` of `tidyr` to convert it.\n\n# We use ggtree to create fan layout tree. \np <- ggtree(tree, layout=\"fan\", open.angle=10, size=0.5)\n#> Scale for y is already present.\n#> Adding another scale for y, which will replace the existing scale.\np\n```\n\n::: {.cell-output-display}\n![Fan layout tree](index_files/figure-html/unnamed-chunk-3-1.svg){fig-align='center' width=1800}\n:::\n:::\n\n\n\n## Add annotation dataset to tree\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## Next, we can use %<+% of ggtree to add annotation dataset to tree.\n#p1 <- p %<+% dat1\n#p1\n## We use geom_star to add point layer outside of tree.\n#p2 <- p1 + \n#      geom_star(\n#          mapping=aes(fill=Location, size=Length, starshape=Group),\n#          starstroke=0.2\n#      ) +\n#      scale_size_continuous(\n#          range=c(1, 3),\n#          guide=guide_legend(\n#                     keywidth=0.5, \n#                     keyheight=0.5, \n#                     override.aes=list(starshape=15), \n#                     order=2)\n#      ) + \n#      scale_fill_manual(\n#          values=c(\"#F8766D\", \"#C49A00\", \"#53B400\", \"#00C094\", \"#00B6EB\", \"#A58AFF\", \"#FB61D7\"),\n#          guide=\"none\" # don't show the legend.\n#      ) + \n#      scale_starshape_manual(\n#          values=c(1, 15),\n#          guide=guide_legend(\n#                    keywidth=0.5, # adjust width of legend\n#                    keyheight=0.5, # adjust height of legend\n#                    order=1 # adjust the order of legend for multiple legends.\n#                ),\n#          na.translate=FALSE # to remove the NA legend.\n#      ) \n#p2\n\n# Or if you don't use %<+% to import annotation dataset, instead of `data` parameter of `geom_fruit`. \n\n# You should specify the column contained tip labels to y axis of `mapping`, here is `y=ID`.\n\n# the `position` parameter was set to `identity` to add the points on the tip nodes.\np2 <- p + \n      geom_fruit(\n          data=dat1,\n          geom=geom_star,\n          mapping=aes(y=ID, fill=Location, size=Length, starshape=Group),\n          position=\"identity\",\n          starstroke=0.2\n      ) + \n      scale_size_continuous(\n          range=c(1, 3), # the range of size.\n          guide=guide_legend(\n                    keywidth=0.5, \n                    keyheight=0.5,\n                    override.aes=list(starshape=15),\n                    order=2\n                )\n      ) +\n      scale_fill_manual(\n          values=c(\"#F8766D\", \"#C49A00\", \"#53B400\", \"#00C094\", \"#00B6EB\", \"#A58AFF\", \"#FB61D7\"),\n          guide=\"none\" \n      ) + \n      scale_starshape_manual(\n          values=c(1, 15),\n          guide=guide_legend(\n                    keywidth=0.5,\n                    keyheight=0.5,\n                    order=1\n                )\n      )\np2\n```\n\n::: {.cell-output-display}\n![Fan layout tree with annotation](index_files/figure-html/unnamed-chunk-4-1.svg){fig-align='center' width=1800}\n:::\n:::\n\n\n\n## Add heatmap layer on the outer ring\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Next, we will add a heatmap layer on the outer ring of p2 using `geom_tile` of `ggplot2`.\n# Since we want to map some variable of dataset to the `fill` aesthetics of `geom_tile`, but \n# the `fill` of p2 had been mapped. So I need use `new_scale_fill` of `ggnewscale` package to initialize it.\np3 <- p2 + \n      new_scale_fill() + \n      geom_fruit(\n          data=dat2,\n          geom=geom_tile,\n          mapping=aes(y=ID, x=Pos, fill=Type),\n          offset=0.08,   # The distance between external layers, default is 0.03 times of x range of tree.\n          pwidth=0.25 # width of the external layer, default is 0.2 times of x range of tree.\n      ) + \n      scale_fill_manual(\n          values=c(\"#339933\", \"#dfac03\"),\n          guide=guide_legend(keywidth=0.5, keyheight=0.5, order=3)\n      ) \np3\n```\n\n::: {.cell-output-display}\n![Fan layout tree with heatmap](index_files/figure-html/unnamed-chunk-5-1.svg){fig-align='center' width=1800}\n:::\n:::\n\n\n\n## Add heatmap layer for continuous values\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# You can also add heatmap layer for continuous values.\np4 <- p3 + \n      new_scale_fill() +\n      geom_fruit(\n          data=dat3,\n          geom=geom_tile,\n          mapping=aes(y=ID, x=Type2, alpha=Alpha, fill=Type2),\n          pwidth=0.15,\n          axis.params=list(\n                          axis=\"x\", # add axis text of the layer.\n                          text.angle=-45, # the text angle of x-axis.\n                          hjust=0  # adjust the horizontal position of text of axis.\n                      )\n      ) +\n      scale_fill_manual(\n          values=c(\"#b22222\", \"#005500\", \"#0000be\", \"#9f1f9f\"),\n          guide=guide_legend(keywidth=0.5, keyheight=0.5, order=4)\n      ) +\n      scale_alpha_continuous(\n          range=c(0, 0.4), # the range of alpha\n          guide=guide_legend(keywidth=0.5, keyheight=0.5, order=5)\n      ) \np4\n```\n\n::: {.cell-output-display}\n![Fan layout tree with heatmap for continuous values](index_files/figure-html/unnamed-chunk-6-1.svg){fig-align='center' width=1800}\n:::\n\n```{.r .cell-code}\n# Then add a bar layer outside of the tree.\np5 <- p4 + \n      new_scale_fill() +\n      geom_fruit(\n          data=dat1,\n          geom=geom_col,\n          mapping=aes(y=ID, x=Abundance, fill=Location),  #The 'Abundance' of 'dat1' will be mapped to x\n          pwidth=0.4,\n          axis.params=list(\n                          axis=\"x\", # add axis text of the layer.\n                          text.angle=-45, # the text size of axis.\n                          hjust=0  # adjust the horizontal position of text of axis.\n                      ),\n          grid.params=list() # add the grid line of the external bar plot.\n      ) + \n      scale_fill_manual(\n          values=c(\"#F8766D\", \"#C49A00\", \"#53B400\", \"#00C094\", \"#00B6EB\", \"#A58AFF\", \"#FB61D7\"),\n          guide=guide_legend(keywidth=0.5, keyheight=0.5, order=6)\n      ) +\n      theme(#legend.position=c(0.96, 0.5), # the position of legend.\n          legend.background=element_rect(fill=NA), # the background of legend.\n          legend.title=element_text(size=7), # the title size of legend.\n          legend.text=element_text(size=6), # the text size of legend.\n          legend.spacing.y = unit(0.02, \"cm\")  # the distance of legends (y orientation).\n      ) \np5\n```\n\n::: {.cell-output-display}\n![Fan layout tree with heatmap for continuous values](index_files/figure-html/unnamed-chunk-6-2.svg){fig-align='center' width=1800}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}