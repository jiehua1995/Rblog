{
  "hash": "7ba35b5a5088bc58a12caf800329b3d3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"tidyplots for R plotting\"\nauthor: \"Jie Hua\"\ndate: \"2025-05-06\"\ndate-modified: \"2025-05-06\"\ncategories: [Plot]\nimg: \"tidyplots.svg\"\n---\n\n\n\n\n## Basic Information\n\nI noticed a new R package called \"tidyplots\" produced by Jan Broder Engler. This package could generate publication ready plots with simple commands, which largely simplified the R plotting process.\n\nThe manual: https://jbengler.github.io/tidyplots/\n\nI had a try and it works very well. I hope there will be more useful functions.\n\nIt is based on ggplot2 system, it is also very easy to add more features as we want.\n\n## Installation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install(\"tidyplots\")\n```\n:::\n\n\n\n\nThe development version could be installed with\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install(\"jbengler/tidyplots\")\n```\n:::\n\n\n\n\n## Plotting\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyplots)\n```\n:::\n\n\n\n\n### Barplot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nTable: First 6 rows of the demo dataframe 'study' \n\n|treatment |group   |dose |participant | age|sex    | score|\n|:---------|:-------|:----|:-----------|---:|:------|-----:|\n|A         |placebo |high |p01         |  23|female |     2|\n|A         |placebo |high |p02         |  45|male   |     4|\n|A         |placebo |high |p03         |  32|female |     5|\n|A         |placebo |high |p04         |  37|male   |     4|\n|A         |placebo |high |p05         |  24|female |     6|\n|B         |placebo |low  |p06         |  23|female |     9|\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstudy |> \n  tidyplot(x = treatment, y = score, color = treatment) |> \n  add_data_points() |> \n  add_mean_bar(alpha = 0.4) |> \n  add_sem_errorbar() |> \n  adjust_colors(new_colors = colors_discrete_seaside)\n```\n\n::: {.cell-output-display}\n![Barplot](index_files/figure-html/unnamed-chunk-5-1.svg){fig-align='center' width=1200}\n:::\n:::\n\n\n\n\n### Barstack plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenergy |> \n  tidyplot(x = year, y = energy, color = energy_source) |> \n  add_barstack_absolute()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=1200}\n:::\n:::\n\n\n\n\nIt provided many useful types of plotting function, it is better to go to its official website to learn how to use this package.\n\n### Other example\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenergy |> \n  dplyr::filter(year %in% c(2005, 2010, 2015, 2020)) |> \n  tidyplot(y = energy, color = energy_source) |> \n  add_donut() |> \n  adjust_size(width = 25, height = 25) |>\n  split_plot(by = year)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ split_plot: split into 4 plots across 1 page\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=1200}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tibble' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidyr' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'readr' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'stringr' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'forcats' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n#library(tidyplots)\n\ndf <- \n  read_csv(\"https://tidyplots.org/data/correlation-matrix.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 202500 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): x, y\ndbl (3): correlation, order_x, order_y\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndf |> \n  tidyplot(x = x, y = y, color = correlation) |> \n  add_heatmap() |> \n  sort_x_axis_labels(order_x) |> \n  sort_y_axis_labels(order_y) |> \n  remove_x_axis() |> \n  remove_y_axis() |> \n  remove_legend_title() |> \n  adjust_legend_position(\"right\") |> \n  adjust_colors(colors_continuous_inferno) |> \n  adjust_theme_details(legend.key.height = unit(1, \"null\")) |> \n  add_caption(\"Data source: Spellman PT, et al. 1998. Mol Biol Cell 9(12): 3273-97.\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=1200}\n:::\n:::\n\n\n\n\nIf tidyplots could directly read .mcool or .hic files, it will be very helpful.\n\nI guess it is what he plans to do, we can use other R packages to read the contact matrix files into a dataframe to have a try, but it will take more efforts.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}